// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SupplyShopDL;

namespace SupplyShopDL.Migrations
{
    [DbContext(typeof(SupplyShopDatabaseContext))]
    partial class SupplyShopDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SupplyShop.LineItems", b =>
                {
                    b.Property<int>("LineItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LineItemID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrdersID")
                        .HasColumnType("int")
                        .HasColumnName("OrdersID");

                    b.Property<int>("ProductID")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("LineItemID")
                        .HasName("Pk_LineItemID");

                    b.HasIndex("OrdersID");

                    b.HasIndex("ProductID");

                    b.ToTable("LineItems");
                });

            modelBuilder.Entity("SupplyShopModels.Customers", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustCity")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cust_City");

                    b.Property<string>("CustEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cust_Email");

                    b.Property<string>("CustPhone")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("cust_Phone");

                    b.Property<string>("CustState")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cust_State");

                    b.Property<string>("CustStreetAdd")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cust_StreetAdd");

                    b.Property<int>("CustZip")
                        .HasColumnType("int")
                        .HasColumnName("cust_Zip");

                    b.Property<string>("CustomerName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Customer_Name");

                    b.HasKey("CustomerId")
                        .HasName("Pk_CustomerId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("SupplyShopModels.Items", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("category");

                    b.Property<string>("ItemDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("itemDesc");

                    b.Property<int>("StoreID")
                        .HasColumnType("int")
                        .HasColumnName("StoreID");

                    b.Property<string>("itemName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("itemName");

                    b.Property<double>("itemPrice")
                        .HasColumnType("float")
                        .HasColumnName("itemPrice");

                    b.Property<int>("itemQuanity")
                        .HasColumnType("int")
                        .HasColumnName("prodQuantity");

                    b.HasKey("ProductID")
                        .HasName("Pk_ProductID");

                    b.HasIndex("StoreID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SupplyShopModels.Orders", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrdersID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerID")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("StoreID");

                    b.Property<double>("totalPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderID")
                        .HasName("Pk_OrdersID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("StoreId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SupplyShopModels.StoreFront", b =>
                {
                    b.Property<int>("StoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StoreID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Store_City");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Store_State");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StreetAdd")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Zip")
                        .HasColumnType("int")
                        .HasColumnName("Store_Zip");

                    b.HasKey("StoreID")
                        .HasName("primary_key_StoreID");

                    b.ToTable("StoreFront");
                });

            modelBuilder.Entity("SupplyShop.LineItems", b =>
                {
                    b.HasOne("SupplyShopModels.Orders", "Orders")
                        .WithMany("LineItems")
                        .HasForeignKey("OrdersID")
                        .HasConstraintName("frkey_orderID")
                        .IsRequired();

                    b.HasOne("SupplyShopModels.Items", "Product")
                        .WithMany("LineItems")
                        .HasForeignKey("ProductID")
                        .HasConstraintName("frk_ProductID")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SupplyShopModels.Items", b =>
                {
                    b.HasOne("SupplyShopModels.StoreFront", "Store")
                        .WithMany("Items")
                        .HasForeignKey("StoreID")
                        .HasConstraintName("fok_StoreID")
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("SupplyShopModels.Orders", b =>
                {
                    b.HasOne("SupplyShopModels.Customers", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .HasConstraintName("FK_CustomerID")
                        .IsRequired();

                    b.HasOne("SupplyShopModels.StoreFront", "Store")
                        .WithMany("Orders")
                        .HasForeignKey("StoreId")
                        .HasConstraintName("fk_StoreID")
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("SupplyShopModels.Customers", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SupplyShopModels.Items", b =>
                {
                    b.Navigation("LineItems");
                });

            modelBuilder.Entity("SupplyShopModels.Orders", b =>
                {
                    b.Navigation("LineItems");
                });

            modelBuilder.Entity("SupplyShopModels.StoreFront", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
